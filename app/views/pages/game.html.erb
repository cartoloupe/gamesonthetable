<div id='user_info' ng-controller='UserController'>

  <br>
  <div class="row">
    <div class="board col-md-6">
      <table class="xtable-bordered">
        <% gridsize.times do |n| %>
          <tr>
            <% gridsize.times do |m| %>
              <td class= <%= getWalls m, n %> > <%= n*gridsize+m %> </td>
            <% end %>
          </tr>
        <% end %>
      </table>
    </div>

    <div class="col-md-3 pull-left">
      <h3>User Information</h3>
      <p>Current user (retrieved with erb) is <%= current_user.email %></p>
      <p>Current user (retrieved with Angular) is {{current_user}}</p>
      <button ng-click='getUser()'>getUser</button>

      <br>
      <h3>Other Users</h3>
      <ul class="">
        <li ng-repeat="user in current_users">
          <span>{{user}}</span>
        </li>
      </ul>
    </div>

  </div>

  <div class="row">
    <div class="bid col-md-4">
      <p>your bid:{{current_bid}}<p>
      <form>
        <input></input>
      </form>
    </div>

    <div class="allbids col-md-4">
      <p>other users' bids</p>
      <ul>
        <li>user_1: 4</li>
        <li>user_3: 6</li>
        <li>user_2: 11</li>
      </ul>
    </div>

  </div>

  <div class="row">
    <div class="time-left">
      <p>Time Left: {{time_left}}</p>
    </div>
  </div>

  <div>
    <div id='moves' ng-controller='MovesController'>
      <div class="row">
        <h1>Moves</h1>
        <p>NewMove= {{newMove}}</p>
        <p>Number_of_moves= {{move.number_of_moves}}</p>
      </div>

      <svg height='200' width='200'>
        <circle cx='150' cy='150' fill='red' r='20'></circle>
      </svg>

      <h5>
        Seems that this code uses regular javascript in moves.js
        rather than our angular app. But, we use ng-submit, which
        doesn't get fired. And ng-model, which maybe does?
      </h5>
      <button
        class='another-move'
        ng-model='newMove.number_of_moves'
        ng-submit='saveMove()'
        >
        3
      </button>

      <button
        class='another-move minus'
        ng-model='newMove.number_of_moves'
        ng-submit='saveMove()'
        >
        -3
      </button>

      <h2>Whereas this uses our angular app</h2>

      <ul>
        <li ng-repeat='move in moves'>
          {{move.number_of_moves}}
        </li>
      </ul>
      <form ng-submit='saveMove()'>
        <input
          id='new-move'
          ng-model='newMove.number_of_moves'
          required='true'
          type='number'>
        <input type='submit' value='Save Move'>
      </form>
      <form ng-submit='destroyMove()'>
        <input type='submit' value='X'>
      </form>


    </div>
  </div>

</div>
